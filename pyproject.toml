[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "audit-agent"
version = "0.1.0"
description = "Linux iptables Policy Enforcer & Auditor"
readme = "README.md"
authors = [
    {name = "Mohammad Abu-Khader", email = "mohammad.abukhader@hotmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Networking :: Firewalls",
    "Topic :: System :: Systems Administration :: Automation",
]
keywords = ["linux", "iptables", "firewall", "audit", "compliance", "security", "Automation"]
requires-python = ">=3.9"
dependencies = [
    "paramiko>=2.11.0",
    "requests>=2.28.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "pyyaml>=6.0",
    "jinja2>=3.1.0",
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/xoity/AuditAgent"
Repository = "https://github.com/xoity/AuditAgent"
Documentation = "https://github.com/xoity/AuditAgent"

[project.scripts]
audit-agent = "audit_agent.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["audit_agent*"]

[tool.ruff]
# Same line length as Black
line-length = 88
# Target Python 3.9+
target-version = "py38"

[tool.ruff.lint]
select = [
    "F",      # Pyflakes
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "I",      # isort
    "N",      # pep8-naming
    "UP",     # pyupgrade
    "S",      # bandit (security)
    "B",      # bugbear
    "A",      # builtins
    "C4",     # comprehensions
    "ERA",    # eradicate
]
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert detected (needed for tests)
    "B008",   # Do not perform function calls in argument defaults (common in Typer)
    "A002",   # Argument shadowing a built-in
    "N805",   # First argument should be named self (cls is correct for validators)
    "ERA001", # Commented-out code
    "B904",   # raise ... from err
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S106", "S108", "S105", "F841"]
"examples/**/*.py" = ["T20", "S106"]
"audit_agent/cli.py" = ["T201"]
"audit_agent/core/credentials.py" = ["S507"]
"audit_agent/devices/base.py" = ["S110"]
"audit_agent/devices/linux_iptables.py" = ["S110"]
"audit_agent/enforcement/engine.py" = ["B007"]

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]

# Configure asyncio mode for async tests
asyncio_mode = "auto"

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Markers for test categorization
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "network: marks tests that require network access",
]
